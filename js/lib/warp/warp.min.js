// WARP 3D Animated Figures (c) Daniel Robin 2013
var WARP=WARP||{REVISION:12};WARP.Loader={loadVolumeOfRevolutionPresentation:function(a){a=JSON.parse(a);new WARP.Animator;for(var b=[],c=0,d=a.objects.length;c<d;c++){var e=a.objects[c];switch(e.type){case WARP.Loader.ObjectCurveObject:var g=new THREE.Geometry;g.vertices=e.vertices;g.vertexColors=e.vertexColors;b.push(new THREE.ParticleSystem(new THREE.Geometry))}}}};
WARP.Math={LinearInterpolation:1,ExponentialInterpolation:2,SinusoidalInterpolation:3,QuadraticInterpolation:4,CubicInterpolation:5,interpolate:function(a,b,c,d){if("number"===typeof a)switch(d){case WARP.Math.ExponentialInterpolation:return c=Math.pow(300,c-1),(1-c)*a+c*b;case WARP.Math.SinusoidalInterpolation:return c=0.5*(1+Math.sin(c*Math.PI-Math.PI/2)),(1-c)*a+c*b;case WARP.Math.QuadraticInterpolation:return(1-c)*(1-c)*a*a+2*c*(c-1)*a*b+c*c*b*b;case WARP.Math.CubicInterpolation:return a;default:return(1-
c)*a+c*b}else{if("boolean"===typeof a)return 0.5<=WARP.Math.interpolate(0,1,c,d)?b:a;if(a instanceof Object&&void 0!==a.value)return a.value+WARP.Math.interpolate(0,1,c,d)*(b.value-a.value);if(a instanceof WARP.Vertex||a instanceof THREE.Vector2||a instanceof THREE.Vector3||a instanceof THREE.Vector4){var e=a.clone();e.x=a.x+WARP.Math.interpolate(0,1,c,d)*(b.x-a.x);e.y=a.y+WARP.Math.interpolate(0,1,c,d)*(b.y-a.y);e.z=a.z+WARP.Math.interpolate(0,1,c,d)*(b.z-a.z);return e}if(a instanceof Array)return e=
[],e.push(a[0]+WARP.Math.interpolate(0,1,c,d)*(b[0]-a[0])),e.push(a[1]+WARP.Math.interpolate(0,1,c,d)*(b[1]-a[1])),e.push(a[2]+WARP.Math.interpolate(0,1,c,d)*(b[2]-a[2])),e;console.error("WARP.Math: Cannot compute interpolation with value of type "+typeof a);return!1}}};WARP.Parameter=function(a,b,c){this.targetObject=a;this.targetName=b;this.onChange=void 0==c?function(){}:c};WARP.Parameter.prototype.setValue=function(a){this.targetObject[this.targetName]=a;this.onChange.call(this,a)};
WARP.Parameter.prototype.getValue=function(){return this.targetObject[this.targetName]};WARP.Vertex=function(a,b,c){this.x=a;this.y=b;this.z=c;this.normal=new THREE.Vector3;this.faces=[]};WARP.Vertex.prototype=Object.create(THREE.Vector3.prototype);WARP.Vertex.prototype.computeNormal=function(){var a=this.faces,b=this.normal=new THREE.Vector3,c=a.length-1;do b.add(a[c].normal);while(c--);b.normalize()};
WARP.Vertex.prototype.setParentFace=function(a){if(0!=this.faces.length){var b=this.faces.length-1;do{var c=this.faces[b];if(c.a==a.a&&c.b==a.b&&c.c==a.c)return}while(0<=--b);this.faces.push(a)}};WARP.Face3=function(a,b,c){THREE.Face3.call(this,a,b,c);this.vertices=[]};WARP.Face3.prototype=Object.create(THREE.Face3.prototype);
WARP.Face3.prototype.computeNormal=function(){var a=[this.vertices[1].x-this.vertices[0].x,this.vertices[1].y-this.vertices[0].y,this.vertices[1].z-this.vertices[0].z],b=[this.vertices[2].x-this.vertices[0].x,this.vertices[2].y-this.vertices[0].y,this.vertices[2].z-this.vertices[0].z];this.normal=(new THREE.Vector3(a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0])).normalize()};WARP.Geometry=function(a){THREE.Geometry.call(this,a)};WARP.Geometry.prototype=Object.create(THREE.Geometry.prototype);
WARP.Geometry.prototype.compile=function(){var a=this.faces.length-1;do{var b=this.faces[a];b instanceof WARP.Face3&&(b.vertexNormals.push(b.vertices[0].normal),b.vertexNormals.push(b.vertices[1].normal),b.vertexNormals.push(b.vertices[2].normal))}while(0<=a--);this.computeBoundingSphere()};
WARP.Geometry.prototype.createVertex=function(a,b,c){var d=this.vertices,e=this.vertices.length-1;id=-1;do if(0<e&&d[e].x==a&&d[e].y==b&&d[e].z==c){id=e;break}while(0<=e--);-1===id&&(this.vertices.push(new WARP.Vertex(a,b,c)),id=this.vertices.length-1);return id};
WARP.Geometry.prototype.createFace=function(a,b,c){if(a!=b&&a!=c&&b!=c){var d=new WARP.Face3(a,b,c);d.vertices.push(this.vertices[a]);d.vertices.push(this.vertices[b]);d.vertices.push(this.vertices[c]);d.computeNormal();this.vertices[a].normal.add(d.normal).normalize();this.vertices[b].normal.add(d.normal).normalize();this.vertices[c].normal.add(d.normal).normalize();this.vertices[a].setParentFace(d);this.vertices[b].setParentFace(d);this.vertices[c].setParentFace(d);this.faces.push(d)}};
WARP.Geometry.prototype.createFan=function(a,b){var c=b-1;do{var d=new WARP.Face3(a,a+c-1,a+c);d.vertices.push(this.vertices[a]);d.vertices.push(this.vertices[a+c-1]);d.vertices.push(this.vertices[a+c]);this.vertices[a].faces.push(d);this.vertices[a+c-1].faces.push(d);this.vertices[a+c].faces.push(d);d.computeNormal();this.faces.push(d)}while(2<=c--)};WARP.AdaptiveGeometry=function(a){WARP.Geometry.call(this,a);this.adaptive=!0;this.resolution=1};WARP.AdaptiveGeometry.prototype=Object.create(WARP.Geometry.prototype);
WARP.AdaptiveGeometry.prototype.scaleToResolution=function(a,b){return a*(1-Math.pow(Math.E,-(b||1)*this.resolution))};WARP.AdaptiveGeometry.prototype.inverseScaleToResolution=function(a,b){return a*Math.pow(Math.E,-(b||1)*this.resolution)};WARP.AdaptiveGeometry.prototype.setResolution=function(a){this.resolution=a};
WARP.VolumeOfRevolutionGeometry=function(a){WARP.AdaptiveGeometry.call(this,a);this.rotationAxis=void 0!==a.rotationAxis?a.rotationAxis:0;this.a=void 0!==a.a?a.a:0;this.b=void 0!==a.b?a.b:1;this.y=void 0!==a.y?a.y:function(a){return a};this.calculate()};WARP.VolumeOfRevolutionGeometry.prototype=Object.create(WARP.AdaptiveGeometry.prototype);
WARP.VolumeOfRevolutionGeometry.prototype.calculate=function(){var a=this.inverseScaleToResolution(1,3),b=Math.PI/Math.pow(2,Math.ceil(5*this.scaleToResolution(1))),c=this.inverseScaleToResolution(1.5),d=0,e=Math.floor((this.b-this.a)/a);if(this.adaptive)for(var g=0;g<=e;g++)var f=this.a+g*a,d=Math.max(d,Math.abs(1/(4*a*a)*((0,this.y)(f+2*a)-2*(0,this.y)(f)+(0,this.y)(f-2*a))));var h=a,f=this.a,g=[],e=Math.floor((this.b-this.a)/a);g.push({x:this.a,y:0});f=this.a;for(e=this.b;f<=e;f+=h)g.push({x:f,
y:this.y(f)}),this.adaptive&&(h=a*(1-Math.min(0.1,Math.abs(1/(4*a*a)*((0,this.y)(f+2*a)-2*(0,this.y)(f)+(0,this.y)(f-2*a)))/(d+1E-6))));f>this.b&&g.push({x:this.b,y:this.y(this.b)});g.push({x:this.b,y:0});g.push({x:this.a,y:0});this.points=g;for(var a=[[]],d=0,k=c,e=Math.floor(2*Math.PI/b),f=0,n=g.length;f<n;f++){this.adaptive&&g[f].x>=k&&(k+=c,b/=2,e=Math.floor(2*Math.PI/b));for(var l=0,p=e;l<p;l++)h=l*b,"x"==this.rotationAxis?a[d].push(this.createVertex(g[f].x,g[f].y*Math.sin(h),g[f].y*Math.cos(h))):
a[d].push(this.createVertex(g[f].x*Math.sin(h),g[f].y,g[f].x*Math.cos(h)));a.push([]);d++}a.pop();d=a.length-1;do{b=a[d].length-1;do if(d+2>a.length){var m=function(a,b,d,c){if(1<c){var e=d+c;c=d+c/2;a.createFace(b[d],b[e>b.length-1?0:e],b[c]);m(a,b,d,c-d);m(a,b,c,e-c)}},e=a[d].length/a[0].length;0==b%e&&m(this,a[d],b,e)}else a[d+1].length>a[d].length?(f={a:a[d][b],b:a[d+1][2*b],c:a[d+1][2*b+1],d:a[d+1][2*b+2>a[d+1].length-1?0:2*b+2],e:a[d][b+1>a[d].length-1?0:b+1]},this.createFace(f.a,f.b,f.c),this.createFace(f.a,
f.c,f.e),this.createFace(f.e,f.c,f.d)):(c=b+1>a[d].length-1?0:b+1,f={a:a[d][b],b:a[d+1][b],c:a[d+1][c],d:a[d][c]},this.createFace(f.a,f.b,f.c),this.createFace(f.a,f.c,f.d));while(0<=--b)}while(0<=--d);this.compile()};
WARP.Axes=function(a,b,c,d,e){THREE.Object3D.call(this);a=a||[-1,1];b=b||[-1,1];c=c||[-1,1];var g=new THREE.MeshBasicMaterial({color:e||0,side:THREE.DoubleSide});d=new THREE.LineBasicMaterial({color:e||0,linewidth:d||1});if(0!=a[0]||0!=a[1])e=new THREE.Geometry,e.vertices.push(new THREE.Vector3(a[0],0,0)),e.vertices.push(new THREE.Vector3(a[1],0,0)),e.vertices.push(new THREE.Vector3(a[1]-0.05,0.05,0)),e.vertices.push(new THREE.Vector3(a[1]+0.05,0,0)),e.vertices.push(new THREE.Vector3(a[1]-0.05,-0.05,
0)),e.vertices.push(new THREE.Vector3(a[1],0,0)),this.add(new THREE.Line(e.clone(),d)),e.faces.push(new THREE.Face3(1,2,3)),e.faces.push(new THREE.Face3(1,3,4)),this.add(new THREE.Mesh(e,g));if(0!=b[0]||0!=b[1])e=new THREE.Geometry,e.vertices.push(new THREE.Vector3(0,b[0],0)),e.vertices.push(new THREE.Vector3(0,b[1],0)),e.vertices.push(new THREE.Vector3(0.05,b[1]-0.05,0)),e.vertices.push(new THREE.Vector3(0,b[1]+0.05,0)),e.vertices.push(new THREE.Vector3(-0.05,b[1]-0.05,0)),e.vertices.push(new THREE.Vector3(0,
b[1],0)),this.add(new THREE.Line(e.clone(),d)),e.faces.push(new THREE.Face3(1,2,3)),e.faces.push(new THREE.Face3(1,3,4)),this.add(new THREE.Mesh(e,g));if(0!=c[0]||0!=c[1])e=new THREE.Geometry,e.vertices.push(new THREE.Vector3(0,0,c[0])),e.vertices.push(new THREE.Vector3(0,0,c[1])),e.vertices.push(new THREE.Vector3(0,0.05,c[1]-0.05)),e.vertices.push(new THREE.Vector3(0,0,c[1]+0.05)),e.vertices.push(new THREE.Vector3(0,-0.05,c[1]-0.05)),e.vertices.push(new THREE.Vector3(0,0,c[1])),this.add(new THREE.Line(e.clone(),
d)),e.faces.push(new THREE.Face3(1,2,3)),e.faces.push(new THREE.Face3(1,3,4)),this.add(new THREE.Mesh(e,g))};WARP.Axes.prototype=Object.create(THREE.Object3D.prototype);WARP.Animation=function(a){(void 0).startTime};WARP.Animation.prototype.init=function(a){a=a||0;this.startTime=Date.now()-a;this.animating=!0;this.onInit.call(this)};
WARP.Animation.prototype.update=function(){if(!this.animating)return!1;var a=this.elapsedTime=Date.now()-this.startTime;if(a>=this.duration)return this.animating=!1,this.onComplete.call(this),!1;this.onUpdate.call(this,a);return!0};WARP.Animation.prototype.suspendAnimation=function(){this.animating=!1};WARP.Animation.prototype.stopAnimation=function(){this.animating=!1;this.onStop.call(this)};
WARP.Animator=function(){this.animations=[];this.startedAnimations=0;this.startTime;this.duration=this.elapsedTime=0;this.animating=!1};WARP.Animator.prototype.play=function(){this.startTime=Date.now()-this.elapsedTime;this.animating=!0};WARP.Animator.prototype.pause=function(){var a=this.animations.length-1;do this.animations[a].animation.suspendAnimation();while(a--);this.animating=!1};
WARP.Animator.prototype.stop=function(){this.elapsedTime=0;var a=this.animations.length-1;do this.animations[a].animating=!1;while(a--);this.animating=!1};
WARP.Animator.prototype.update=function(){if(this.animating){var a=0,b=this.elapsedTime=Date.now()-this.startTime,c=this.animations.length-1;do{var d=this.animations[c];if(this.startedAnimations==this.animations.length&&(d.animation.animating||a++,a==this.animations.length)){this.animating=!1;break}b>=d.time&&c>this.startedAnimations-1?(d.animation.init(b-d.time),this.startedAnimations++):d.animation.update()}while(c--)}};
WARP.Animator.prototype.appendTimeline=function(a,b){this.animations.push({time:b,animation:a})};WARP.Animator.prototype.computeTimeline=function(){for(var a=0,b=0,c=this.animations.length;b<c;b++)var d=this.animations[b],a=Math.max(a,d.time+d.animation.duration);this.duration=a};
WARP.AnimationUtility={MotionEasingLin:1,MotionEasingExp:2,MotionEasingSin:3,MotionEasingQuad:4,MotionEasingCube:5,createParameterAnimation:function(a,b,c,d){c.target=new WARP.Parameter(a,b,d);return new WARP.ParameterAnimation(c)},createKeyFrameAnimation:function(a,b,c){for(var d=[],e=a.length,g=0,f=0;f<e;f++){var h={};h.duration=c.distributeTime?b/e:a[f].duration;h.time=g;h.state=a[f];d.push(h);g+=h.duration}return new WARP.KeyFrameAnimation(d)}};
WARP.ParameterAnimation=function(a){WARP.Animation.call(this,a);this.target=void 0!==a.target?a.target:null;this.startValue=void 0!==a.start?a.start:0;this.endValue=void 0!==a.end?a.end:1;this.easing=void 0!==a.easing?a.easing:WARP.AnimationUtility.MotionEasingLinear};WARP.ParameterAnimation.prototype=Object.create(WARP.Animation.prototype);WARP.ParameterAnimation.prototype.init=function(){WARP.Animation.prototype.init.call(this);this.target.setValue(this.startValue)};
WARP.ParameterAnimation.prototype.update=function(){WARP.Animation.prototype.update.call(this)&&this.target.setValue(WARP.Math.interpolate(this.startValue,this.endValue,this.elapsedTime/this.duration,this.easing))};
WARP.Animator=function(){this.timeline=[];this.animated=[];this.absTime;this.duration=this.time=0;this.animating=!1;this.togglePlay=function(){this.animating?this.pause():this.play()};this.play=function(){this.absTime=Date.now()-this.time;this.animating=!0};this.pause=function(){this.animating=!1};this.stop=function(){for(var a=0,b=this.animated.length;a<b;a++)this.animated[a].animator.finalize();this.animated.length=0;this.animating=!1;this.time=0};this.setTime=function(a){this.absTime=Date.now()-
a;this.animated.length=0;this.animating?this.update():(this.animating=!0,this.update(),this.animating=!1)};this.update=function(){if(this.animating){for(var a=this.time=Date.now()-this.absTime,b=this.timeline,c=this.animated,d=c.length,e=b.length;d<e;d++)b[d].start<=a&&(b[d].animator.initialize(),b[d].animator.animating=!0,c.push(b[d]));for(var g=0,d=0,e=c.length;d<e;d++){var f=(a-c[d].start)/c[d].duration;1<f&&(f=1,c[d].animator.animating=!1);c[d].animator.update(f);c[d].animator.animating||g++}g==
b.length&&(this.animating=!1)}};this.load=function(a){for(var b=this.duration=0,c=a.length;b<c;b++){if(void 0===window[a[b][2]]){console.error("Missing Animator "+a[b][2]);break}var d=new window[a[b][2]];d.parameters=a[b][3];this.timeline.push({start:a[b][0],duration:a[b][1],animator:d});this.duration=Math.max(this.duration,a[b][0]+a[b][1])}}};